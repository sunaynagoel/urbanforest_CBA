---
title: "Cost-Benefit Analysis of Urban Forest"
output: 
  flexdashboard::flex_dashboard:
    storyboard: true
    social: menu
    source: embed
    runtime: shiny
---

```{r }
#message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# install packages and library

# install.packages("leaflet")
#install.packages("flexdashboard")
#install.packages("shiny")
#install.packages("here")
#install.packages("dplyr")

library(shiny)
library(flexdashboard)
library(leaflet)
library(here)
library(dplyr)
```


```{r global, include=FALSE}

# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data 
# dat <- read.csv(here("data/trees-cost-benefit.csv"))

dat <-
structure(list(species = structure(c(4L, 4L, 4L, 4L, 4L, 4L, 
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
5L, 5L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L
), .Label = c("aleppo pine ", "blue palo verde", "chinese elm ", 
"mesquite", "palo brea"), class = "factor"), year = c(0L, 1L, 
2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 
16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 
29L, 30L, 0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 
13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 
26L, 27L, 28L, 29L, 30L, 0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 
9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 
22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 0L, 1L, 2L, 3L, 
4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 
18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 
0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 
15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 
28L, 29L, 30L, 0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 
12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 
25L, 26L, 27L, 28L, 29L, 30L, 0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 
8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 
21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 0L, 1L, 2L, 
3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 
17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 
30L, 0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 
14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 
27L, 28L, 29L, 30L, 0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 27L, 28L, 29L, 30L), canopy_sqft = c(50L, 58L, 
66L, 74L, 82L, 91L, 101L, 110L, 120L, 130L, 141L, 151L, 162L, 
173L, 185L, 196L, 208L, 220L, 232L, 244L, 255L, 266L, 276L, 286L, 
296L, 305L, 314L, 322L, 331L, 340L, 349L, 50L, 58L, 66L, 74L, 
82L, 91L, 101L, 110L, 120L, 130L, 141L, 151L, 162L, 173L, 50L, 
58L, 66L, 74L, 82L, 91L, 101L, 110L, 120L, 130L, 141L, 151L, 
162L, 173L, 185L, 196L, 208L, 50L, 60L, 71L, 82L, 93L, 105L, 
118L, 131L, 145L, 159L, 173L, 186L, 198L, 209L, 220L, 229L, 239L, 
247L, 255L, 262L, 269L, 275L, 281L, 287L, 292L, 297L, 301L, 305L, 
309L, 313L, 316L, 50L, 60L, 71L, 82L, 93L, 105L, 118L, 131L, 
145L, 159L, 173L, 186L, 198L, 209L, 220L, 50L, 60L, 71L, 82L, 
93L, 105L, 118L, 131L, 145L, 159L, 173L, 186L, 198L, 209L, 220L, 
229L, 10L, 14L, 19L, 24L, 29L, 34L, 40L, 46L, 52L, 58L, 64L, 
71L, 77L, 84L, 91L, 98L, 105L, 112L, 120L, 127L, 135L, 143L, 
151L, 158L, 167L, 175L, 183L, 191L, 200L, 208L, 217L, 10L, 14L, 
19L, 24L, 29L, 34L, 40L, 46L, 52L, 58L, 64L, 71L, 77L, 84L, 91L, 
98L, 10L, 14L, 19L, 24L, 29L, 34L, 40L, 46L, 52L, 58L, 64L, 71L, 
77L, 84L, 91L, 27L, 32L, 36L, 41L, 46L, 51L, 55L, 60L, 64L, 67L, 
71L, 74L, 77L, 80L, 83L, 86L, 88L, 91L, 93L, 95L, 97L, 98L, 100L, 
102L, 103L, 105L, 106L, 107L, 108L, 109L, 110L, 27L, 32L, 36L, 
41L, 46L, 51L, 55L, 60L, 64L, 67L, 71L, 74L, 77L, 80L, 83L, 86L, 
88L, 91L, 27L, 32L, 36L, 41L, 46L, 51L, 55L, 60L, 64L, 67L, 71L, 
74L, 77L, 40L, 48L, 58L, 68L, 79L, 91L, 103L, 116L, 129L, 144L, 
158L, 174L, 190L, 206L, 223L, 240L, 258L, 277L, 296L, 315L, 335L, 
356L, 376L, 398L, 419L, 441L, 464L, 486L, 509L, 533L, 557L, 40L, 
48L, 58L, 68L, 79L, 91L, 103L, 116L, 129L, 144L, 158L, 174L, 
190L, 206L, 223L, 240L, 258L, 40L, 48L, 58L, 68L, 79L, 91L, 103L, 
116L, 129L, 144L, 158L, 174L, 190L, 206L), dbh.growth_in = c(0, 
0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 
0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.27, 0.26, 0.25, 0.24, 0.22, 
0.21, 0.2, 0.2, 0.19, 0.18, 0.17, 0.17, 0.17, 0, 0.28, 0.28, 
0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 
0, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 
0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0, 0.36, 0.36, 0.36, 0.36, 
0.36, 0.36, 0.36, 0.36, 0.36, 0.34, 0.31, 0.29, 0.26, 0.24, 0.28, 
0.22, 0.19, 0.17, 0.16, 0.15, 0.14, 0.13, 0.12, 0.11, 0.1, 0.09, 
0.09, 0.08, 0.08, 0.07, 0, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 
0.36, 0.36, 0.36, 0.34, 0.31, 0.29, 0.26, 0.24, 0, 0.36, 0.36, 
0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.34, 0.31, 0.29, 0.26, 
0.24, 0.28, 0, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 
0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 
0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 
0, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 
0.28, 0.28, 0.28, 0.28, 0.28, 0, 0.28, 0.28, 0.28, 0.28, 0.28, 
0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0, 0.19, 
0.19, 0.19, 0.19, 0.18, 0.17, 0.16, 0.14, 0.13, 0.12, 0.11, 0.1, 
0.09, 0.08, 0.08, 0.07, 0.07, 0.06, 0.06, 0.05, 0.05, 0.04, 0.04, 
0.04, 0.04, 0.04, 0.04, 0.03, 0.03, 0.03, 0, 0.19, 0.19, 0.19, 
0.19, 0.18, 0.17, 0.16, 0.14, 0.13, 0.12, 0.11, 0.1, 0.09, 0.08, 
0.08, 0.07, 0.07, 0, 0.19, 0.19, 0.19, 0.19, 0.18, 0.17, 0.16, 
0.14, 0.13, 0.12, 0.11, 0.1, NA, 0.36, 0.36, 0.36, 0.36, 0.36, 
0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 
0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 
0.36, 0.36, 0.36, NA, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 
0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, NA, 0.36, 
0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 
0.36), dbh_in = c(1, 1.28, 1.56, 1.84, 2.12, 2.4, 2.68, 2.96, 
3.24, 3.52, 3.8, 4.08, 4.36, 4.64, 4.92, 5.2, 5.48, 5.76, 6.03, 
6.29, 6.54, 6.78, 7, 7.21, 7.41, 7.61, 7.8, 7.98, 8.15, 8.32, 
8.49, 1, 1.28, 1.56, 1.84, 2.12, 2.4, 2.68, 2.96, 3.24, 3.52, 
3.8, 4.08, 4.36, 4.64, 1, 1.28, 1.56, 1.84, 2.12, 2.4, 2.68, 
2.96, 3.24, 3.52, 3.8, 4.08, 4.36, 4.64, 4.92, 5.2, 5.48, 1, 
1.36, 1.72, 2.08, 2.44, 2.8, 3.16, 3.52, 3.88, 4.24, 4.58, 4.89, 
5.18, 5.44, 5.68, 5.96, 6.18, 6.37, 6.54, 6.7, 6.85, 6.99, 7.12, 
7.24, 7.35, 7.45, 7.54, 7.63, 7.71, 7.79, 7.86, 1, 1.36, 1.72, 
2.08, 2.44, 2.8, 3.16, 3.52, 3.88, 4.24, 4.58, 4.89, 5.18, 5.44, 
5.68, 1, 1.36, 1.72, 2.08, 2.44, 2.8, 3.16, 3.52, 3.88, 4.24, 
4.58, 4.89, 5.18, 5.44, 5.68, 5.96, 1, 1.28, 1.56, 1.84, 2.12, 
2.4, 2.68, 2.96, 3.24, 3.52, 3.8, 4.08, 4.36, 4.64, 4.92, 5.2, 
5.48, 5.76, 6.04, 6.32, 6.6, 6.88, 7.16, 7.44, 7.72, 8, 8.28, 
8.56, 8.84, 9.12, 9.4, 1, 1.28, 1.56, 1.84, 2.12, 2.4, 2.68, 
2.96, 3.24, 3.52, 3.8, 4.08, 4.36, 4.64, 4.92, 5.2, 1, 1.28, 
1.56, 1.84, 2.12, 2.4, 2.68, 2.96, 3.24, 3.52, 3.8, 4.08, 4.36, 
4.64, 4.92, 1, 1.19, 1.38, 1.57, 1.76, 1.94, 2.11, 2.27, 2.41, 
2.54, 2.66, 2.77, 2.87, 2.96, 3.04, 3.12, 3.19, 3.26, 3.32, 3.38, 
3.43, 3.48, 3.52, 3.56, 3.6, 3.64, 3.68, 3.72, 3.75, 3.78, 3.81, 
1, 1.19, 1.38, 1.57, 1.76, 1.94, 2.11, 2.27, 2.41, 2.54, 2.66, 
2.77, 2.87, 2.96, 3.04, 3.12, 3.19, 3.26, 1, 1.19, 1.38, 1.57, 
1.76, 1.94, 2.11, 2.27, 2.41, 2.54, 2.66, 2.77, 2.87, 1, 1.36, 
1.72, 2.08, 2.44, 2.8, 3.16, 3.52, 3.88, 4.24, 4.6, 4.96, 5.32, 
5.68, 6.04, 6.4, 6.76, 7.12, 7.48, 7.84, 8.2, 8.56, 8.92, 9.28, 
9.64, 10, 10.36, 10.72, 11.08, 11.44, 11.8, 1, 1.36, 1.72, 2.08, 
2.44, 2.8, 3.16, 3.52, 3.88, 4.24, 4.6, 4.96, 5.32, 5.68, 6.04, 
6.4, 6.76, 1, 1.36, 1.72, 2.08, 2.44, 2.8, 3.16, 3.52, 3.88, 
4.24, 4.6, 4.96, 5.32, 5.68), co2reduction_lb = c(8L, 10L, 13L, 
18L, 23L, 28L, 34L, 39L, 44L, 49L, 55L, 60L, 65L, 71L, 78L, 85L, 
92L, 99L, 106L, 112L, 118L, 124L, 130L, 135L, 140L, 145L, 149L, 
154L, 158L, 162L, 166L, 8L, 10L, 13L, 18L, 23L, 28L, 34L, 39L, 
44L, 49L, 55L, 60L, 65L, 71L, 8L, 10L, 13L, 18L, 23L, 28L, 34L, 
39L, 44L, 49L, 55L, 60L, 65L, 71L, 78L, 85L, 92L, 5L, 7L, 11L, 
18L, 25L, 32L, 39L, 46L, 53L, 60L, 67L, 77L, 86L, 94L, 101L, 
110L, 116L, 122L, 127L, 132L, 137L, 141L, 145L, 149L, 152L, 155L, 
158L, 161L, 163L, 166L, 168L, 5L, 7L, 11L, 18L, 25L, 32L, 39L, 
46L, 53L, 60L, 67L, 77L, 86L, 94L, 101L, 5L, 7L, 11L, 18L, 25L, 
32L, 39L, 46L, 53L, 60L, 67L, 77L, 86L, 94L, 101L, 110L, 3L, 
4L, 6L, 8L, 10L, 12L, 15L, 17L, 19L, 21L, 24L, 26L, 28L, 32L, 
36L, 41L, 46L, 50L, 55L, 60L, 64L, 69L, 74L, 79L, 83L, 88L, 93L, 
97L, 102L, 108L, 114L, 3L, 4L, 6L, 8L, 10L, 12L, 15L, 17L, 19L, 
21L, 24L, 26L, 28L, 32L, 36L, 41L, 3L, 4L, 6L, 8L, 10L, 12L, 
15L, 17L, 19L, 21L, 24L, 26L, 28L, 32L, 36L, 5L, 6L, 7L, 8L, 
10L, 12L, 13L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 21L, 22L, 23L, 
23L, 24L, 24L, 25L, 25L, 26L, 26L, 26L, 27L, 27L, 27L, 28L, 28L, 
28L, 5L, 6L, 7L, 8L, 10L, 12L, 13L, 15L, 16L, 17L, 18L, 19L, 
20L, 21L, 21L, 22L, 23L, 23L, 5L, 6L, 7L, 8L, 10L, 12L, 13L, 
15L, 16L, 17L, 18L, 19L, 20L, 9L, 12L, 19L, 28L, 36L, 45L, 53L, 
62L, 71L, 79L, 89L, 104L, 118L, 132L, 147L, 161L, 175L, 190L, 
204L, 218L, 233L, 247L, 261L, 279L, 297L, 315L, 336L, 356L, 372L, 
392L, 407L, 9L, 12L, 19L, 28L, 36L, 45L, 53L, 62L, 71L, 79L, 
89L, 104L, 118L, 132L, 147L, 161L, 175L, 9L, 12L, 19L, 28L, 36L, 
45L, 53L, 62L, 71L, 79L, 89L, 104L, 118L, 132L), ben_property_value = c(7.87, 
10.07, 11.94, 12.57, 13.19, 13.82, 14.45, 15.07, 15.7, 16.33, 
16.95, 17.58, 18.21, 18.8, 19.36, 19.91, 20.47, 21.03, 21.56, 
22.08, 22.58, 23.06, 23.49, 23.91, 24.31, 24.71, 25.08, 25.44, 
25.78, 26.12, 26.46, 7.87, 10.07, 11.94, 12.57, 13.19, 13.82, 
14.45, 15.07, 15.7, 16.33, 16.95, 17.58, 18.21, 18.8, 19.36, 
19.91, 20.47, 7.87, 10.07, 11.94, 12.57, 13.19, 13.82, 14.45, 
15.07, 15.7, 16.33, 16.95, 17.58, 18.21, 18.8, 3.71, 5.04, 6.03, 
6.8, 7.57, 8.34, 9.11, 9.88, 10.65, 11.42, 12.21, 13.12, 13.97, 
14.73, 15.43, 16.25, 16.9, 17.45, 17.95, 18.42, 18.86, 19.27, 
19.65, 20, 20.32, 20.61, 20.88, 21.14, 21.37, 21.61, 21.81, 3.71, 
5.04, 6.03, 6.8, 7.57, 8.34, 9.11, 9.88, 10.65, 11.42, 12.21, 
13.12, 13.97, 14.73, 15.43, 3.71, 5.04, 6.03, 6.8, 7.57, 8.34, 
9.11, 9.88, 10.65, 11.42, 12.21, 13.12, 13.97, 14.73, 15.43, 
21.81, 4.89, 6.26, 7.5, 8.28, 9.06, 9.84, 10.61, 11.39, 12.17, 
12.95, 13.73, 14.51, 15.29, 16.05, 16.8, 17.55, 18.3, 19.04, 
19.79, 20.54, 21.29, 22.04, 22.78, 23.53, 24.28, 25.03, 25.78, 
26.52, 27.27, 27.92, 28.43, 4.89, 6.26, 7.5, 8.28, 9.06, 9.84, 
10.61, 11.39, 12.17, 12.95, 13.73, 14.51, 15.29, 16.05, 16.8, 
17.55, 4.89, 6.26, 7.5, 8.28, 9.06, 9.84, 10.61, 11.39, 12.17, 
12.95, 13.73, 14.51, 15.29, 16.05, 16.8, 5.36, 6.38, 7.4, 8.08, 
8.16, 8.25, 8.32, 8.39, 8.46, 8.52, 8.57, 8.62, 8.66, 8.7, 8.74, 
8.78, 8.81, 8.84, 8.87, 8.89, 8.92, 8.94, 8.96, 8.97, 8.99, 9.01, 
9.03, 9.05, 9.06, 9.07, 9.09, 5.36, 6.38, 7.4, 8.08, 8.16, 8.25, 
8.32, 8.39, 8.46, 8.52, 8.57, 8.62, 8.66, 8.7, 8.74, 8.78, 8.81, 
8.84, 6.38, 7.4, 8.08, 8.16, 8.25, 8.32, 8.39, 8.46, 8.52, 8.57, 
8.62, 8.66, 8.7, 5.43, 7.38, 9.1, 10.66, 12.23, 13.8, 15.36, 
16.93, 18.5, 20.06, 21.63, 23.19, 24.76, 26.33, 27.89, 29.46, 
31.03, 32.59, 34.16, 35.73, 37.29, 38.86, 40.43, 41.89, 43.33, 
44.76, 46.36, 47.95, 49.15, 50.75, 51.94, 5.43, 7.38, 9.1, 10.66, 
12.23, 13.8, 15.36, 16.93, 18.5, 20.06, 21.63, 23.19, 24.76, 
26.33, 27.89, 29.46, 31.03, 5.43, 7.38, 9.1, 10.66, 12.23, 13.8, 
15.36, 16.93, 18.5, 20.06, 21.63, 23.19, 24.76, 26.33), ben_storm_water = c(0.12, 
0.16, 0.21, 0.29, 0.37, 0.46, 0.54, 0.62, 0.71, 0.79, 0.88, 0.96, 
1.04, 1.15, 1.27, 1.39, 1.51, 1.63, 1.75, 1.86, 1.97, 2.08, 2.17, 
2.26, 2.35, 2.44, 2.52, 2.6, 2.67, 2.75, 2.82, 0.12, 0.16, 0.21, 
0.29, 0.37, 0.46, 0.54, 0.62, 0.71, 0.79, 0.88, 0.96, 1.04, 1.15, 
1.27, 1.39, 1.51, 0.12, 0.16, 0.21, 0.29, 0.37, 0.46, 0.54, 0.62, 
0.71, 0.79, 0.88, 0.96, 1.04, 1.15, 0.11, 0.16, 0.24, 0.35, 0.46, 
0.57, 0.69, 0.79, 0.9, 1.01, 1.12, 1.27, 1.4, 1.52, 1.63, 1.76, 
1.86, 1.85, 2.03, 2.1, 2.17, 2.24, 2.3, 2.35, 2.4, 2.45, 2.49, 
2.53, 2.57, 2.61, 2.64, 0.11, 0.16, 0.24, 0.35, 0.46, 0.57, 0.69, 
0.79, 0.9, 1.01, 1.12, 1.27, 1.4, 1.52, 1.63, 0.11, 0.16, 0.24, 
0.35, 0.46, 0.57, 0.69, 0.79, 0.9, 1.01, 1.12, 1.27, 1.4, 1.52, 
1.63, 2.64, 0.11, 0.14, 0.18, 0.23, 0.29, 0.34, 0.39, 0.45, 0.5, 
0.55, 0.61, 0.66, 0.71, 0.79, 0.89, 0.98, 1.08, 1.18, 1.28, 1.38, 
1.47, 1.57, 1.67, 1.77, 1.86, 1.96, 2.06, 2.16, 2.26, 2.38, 2.54, 
0.11, 0.14, 0.18, 0.23, 0.29, 0.34, 0.39, 0.45, 0.5, 0.55, 0.61, 
0.66, 0.71, 0.79, 0.89, 0.98, 0.11, 0.14, 0.18, 0.23, 0.29, 0.34, 
0.39, 0.45, 0.5, 0.55, 0.61, 0.66, 0.71, 0.79, 0.89, 0.18, 0.22, 
0.25, 0.29, 0.33, 0.37, 0.41, 0.45, 0.48, 0.51, 0.53, 0.56, 0.58, 
0.6, 0.62, 0.64, 0.65, 0.67, 0.68, 0.7, 0.71, 0.72, 0.73, 0.74, 
0.75, 0.75, 0.76, 0.77, 0.78, 0.79, 0.79, 0.18, 0.22, 0.25, 0.29, 
0.33, 0.37, 0.41, 0.45, 0.48, 0.51, 0.53, 0.56, 0.58, 0.6, 0.62, 
0.64, 0.65, 0.67, 0.22, 0.25, 0.29, 0.33, 0.37, 0.41, 0.45, 0.48, 
0.51, 0.53, 0.56, 0.58, 0.6, 0.14, 0.19, 0.28, 0.39, 0.51, 0.62, 
0.74, 0.85, 0.96, 1.08, 1.22, 1.43, 1.64, 1.86, 2.07, 2.28, 2.49, 
2.7, 2.92, 3.13, 3.34, 3.55, 3.76, 4.06, 4.38, 4.7, 5.05, 5.41, 
5.67, 6.03, 6.3, 0.14, 0.19, 0.28, 0.39, 0.51, 0.62, 0.74, 0.85, 
0.96, 1.08, 1.22, 1.43, 1.64, 1.86, 2.07, 2.28, 2.49, 0.14, 0.19, 
0.28, 0.39, 0.51, 0.62, 0.74, 0.85, 0.96, 1.08, 1.22, 1.43, 1.64, 
1.86), ben_air_quality = c(0.08, 0.13, 0.14, 0.13, 0.43, 0.55, 
0.68, 0.8, 0.93, 1.05, 1.17, 1.29, 1.42, 1.59, 1.81, 2.03, 2.25, 
2.47, 2.68, 2.88, 3.08, 3.27, 3.44, 3.61, 3.76, 3.92, 4.07, 4.21, 
4.34, 4.48, 4.61, 0.08, 0.13, 0.14, 0.13, 0.43, 0.55, 0.68, 0.8, 
0.93, 1.05, 1.17, 1.29, 1.42, 1.59, 1.81, 2.03, 2.25, 0.08, 0.13, 
0.14, 0.13, 0.43, 0.55, 0.68, 0.8, 0.93, 1.05, 1.17, 1.29, 1.42, 
1.59, 0.1, 0.14, 0.27, 0.45, 0.64, 0.82, 1.01, 1.19, 1.38, 1.56, 
1.78, 2.09, 2.38, 2.64, 2.88, 3.16, 3.38, 3.57, 3.75, 3.91, 4.06, 
4.2, 4.33, 4.45, 4.56, 4.66, 4.75, 4.84, 4.92, 5, 5.07, 0.1, 
0.14, 0.27, 0.45, 0.64, 0.82, 1.01, 1.19, 1.38, 1.56, 1.78, 2.09, 
2.38, 2.64, 2.88, 0.1, 0.14, 0.27, 0.45, 0.64, 0.82, 1.01, 1.19, 
1.38, 1.56, 1.78, 2.09, 2.38, 2.64, 2.88, 5.07, 0.09, 0.11, 0.14, 
0.18, 0.26, 0.27, 0.29, 0.33, 0.37, 0.41, 0.45, 0.49, 0.53, 0.59, 
0.67, 0.76, 0.84, 0.92, 1, 1.09, 1.17, 1.25, 1.34, 1.42, 1.5, 
1.59, 1.67, 1.75, 1.84, 1.95, 2.11, 0.09, 0.11, 0.14, 0.18, 0.26, 
0.27, 0.29, 0.33, 0.37, 0.41, 0.45, 0.49, 0.53, 0.59, 0.67, 0.76, 
0.09, 0.11, 0.14, 0.18, 0.26, 0.27, 0.29, 0.33, 0.37, 0.41, 0.45, 
0.49, 0.53, 0.59, 0.67, 0.15, 0.17, 0.2, 0.24, 0.28, 0.33, 0.37, 
0.41, 0.44, 0.48, 0.5, 0.53, 0.56, 0.58, 0.6, 0.62, 0.64, 0.65, 
0.67, 0.68, 0.69, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.77, 
0.78, 0.79, 0.15, 0.17, 0.2, 0.24, 0.28, 0.33, 0.37, 0.41, 0.44, 
0.48, 0.5, 0.53, 0.56, 0.58, 0.6, 0.62, 0.64, 0.65, 0.17, 0.2, 
0.24, 0.28, 0.33, 0.37, 0.41, 0.44, 0.48, 0.5, 0.53, 0.56, 0.58, 
0.23, 0.31, 0.48, 0.69, 0.91, 1.13, 1.35, 1.57, 1.79, 2.01, 2.29, 
2.76, 3.22, 3.68, 4.15, 4.61, 5.08, 5.54, 6, 6.47, 6.93, 7.39, 
7.86, 8.64, 9.5, 10.37, 11.33, 12.29, 13.02, 13.98, 14.7, 0.23, 
0.31, 0.48, 0.69, 0.91, 1.13, 1.35, 1.57, 1.79, 2.01, 2.29, 2.76, 
3.22, 3.68, 4.15, 4.61, 5.08, 0.23, 0.31, 0.48, 0.69, 0.91, 1.13, 
1.35, 1.57, 1.79, 2.01, 2.29, 2.76, 3.22, 3.68), ben_co2_reduction = c(0.06, 
0.07, 0.09, 0.13, 0.17, 0.21, 0.25, 0.29, 0.33, 0.37, 0.4, 0.44, 
0.48, 0.53, 0.58, 0.63, 0.68, 0.73, 0.78, 0.83, 0.87, 0.91, 0.95, 
0.99, 1.03, 1.06, 1.1, 1.13, 1.16, 1.19, 1.22, 0.06, 0.07, 0.09, 
0.13, 0.17, 0.21, 0.25, 0.29, 0.33, 0.37, 0.4, 0.44, 0.48, 0.53, 
0.58, 0.63, 0.68, 0.06, 0.07, 0.09, 0.13, 0.17, 0.21, 0.25, 0.29, 
0.33, 0.37, 0.4, 0.44, 0.48, 0.53, 0.04, 0.05, 0.1, 0.14, 0.19, 
0.24, 0.29, 0.34, 0.39, 0.44, 0.5, 0.57, 0.63, 0.69, 0.74, 0.81, 
0.86, 0.9, 0.94, 0.97, 1.01, 1.04, 1.07, 1.1, 1.12, 1.14, 1.16, 
1.18, 1.2, 1.22, 1.24, 0.04, 0.05, 0.1, 0.14, 0.19, 0.24, 0.29, 
0.34, 0.39, 0.44, 0.5, 0.57, 0.63, 0.69, 0.74, 0.04, 0.05, 0.1, 
0.14, 0.19, 0.24, 0.29, 0.34, 0.39, 0.44, 0.5, 0.57, 0.63, 0.69, 
0.74, 1.24, 0.03, 0.03, 0.04, 0.06, 0.07, 0.09, 0.11, 0.12, 0.14, 
0.16, 0.17, 0.19, 0.21, 0.23, 0.27, 0.3, 0.34, 0.37, 0.4, 0.44, 
0.47, 0.51, 0.54, 0.58, 0.61, 0.64, 0.69, 0.71, 0.75, 0.79, 0.83, 
0.03, 0.03, 0.04, 0.06, 0.07, 0.09, 0.11, 0.12, 0.14, 0.16, 0.17, 
0.19, 0.21, 0.23, 0.27, 0.3, 0.03, 0.03, 0.04, 0.06, 0.07, 0.09, 
0.11, 0.12, 0.14, 0.16, 0.17, 0.19, 0.21, 0.23, 0.27, 0.04, 0.05, 
0.5, 0.06, 0.07, 0.09, 0.1, 0.11, 0.12, 0.13, 0.13, 0.14, 0.15, 
0.15, 0.16, 0.16, 0.17, 0.17, 0.18, 0.18, 0.18, 0.19, 0.19, 0.19, 
0.19, 0.2, 0.2, 0.2, 0.2, 0.21, 0.21, 0.04, 0.05, 0.5, 0.06, 
0.07, 0.09, 0.1, 0.11, 0.12, 0.13, 0.13, 0.14, 0.15, 0.15, 0.16, 
0.16, 0.17, 0.17, 0.05, 0.5, 0.06, 0.07, 0.09, 0.1, 0.11, 0.12, 
0.13, 0.13, 0.14, 0.15, 0.15, 0.07, 0.09, 0.14, 0.2, 0.27, 0.33, 
0.4, 0.46, 0.52, 0.59, 0.66, 0.77, 0.87, 0.98, 1.08, 1.19, 1.29, 
1.4, 1.5, 1.61, 1.71, 1.82, 1.92, 2.05, 2.18, 2.31, 2.46, 2.61, 
2.72, 2.87, 2.98, 0.07, 0.09, 0.14, 0.2, 0.27, 0.33, 0.4, 0.46, 
0.52, 0.59, 0.66, 0.77, 0.87, 0.98, 1.08, 1.19, 1.29, 0.07, 0.09, 
0.14, 0.2, 0.27, 0.33, 0.4, 0.46, 0.52, 0.59, 0.66, 0.77, 0.87, 
0.98), ben_naturalgas = c(0.03, 0.04, 0.05, 0.07, 0.1, 0.12, 
0.15, 0.17, 0.2, 0.22, 0.25, 0.28, 0.3, 0.32, 0.35, 0.38, 0.41, 
0.43, 0.46, 0.49, 0.51, 0.53, 0.55, 0.57, 0.59, 0.61, 0.63, 0.65, 
0.67, 0.68, 0.7, 0.03, 0.04, 0.05, 0.07, 0.1, 0.12, 0.15, 0.17, 
0.2, 0.22, 0.25, 0.28, 0.3, 0.32, 0.35, 0.38, 0.41, 0.03, 0.04, 
0.05, 0.07, 0.1, 0.12, 0.15, 0.17, 0.2, 0.22, 0.25, 0.28, 0.3, 
0.32, 0.03, 0.04, 0.08, 0.1, 0.14, 0.17, 0.21, 0.25, 0.28, 0.32, 
0.35, 0.39, 0.42, 0.45, 0.48, 0.51, 0.54, 0.56, 0.58, 0.6, 0.62, 
0.63, 0.65, 0.66, 0.67, 0.69, 0.7, 0.71, 0.72, 0.72, 0.73, 0.03, 
0.04, 0.08, 0.1, 0.14, 0.17, 0.21, 0.25, 0.28, 0.32, 0.35, 0.39, 
0.42, 0.45, 0.48, 0.03, 0.04, 0.08, 0.1, 0.14, 0.17, 0.21, 0.25, 
0.28, 0.32, 0.35, 0.39, 0.42, 0.45, 0.48, 0.73, 0.03, 0.03, 0.04, 
0.05, 0.06, 0.07, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 
0.15, 0.16, 0.18, 0.19, 0.2, 0.22, 0.23, 0.24, 0.26, 0.27, 0.28, 
0.3, 0.31, 0.32, 0.34, 0.35, 0.37, 0.03, 0.03, 0.04, 0.05, 0.06, 
0.07, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 
0.03, 0.03, 0.04, 0.05, 0.06, 0.07, 0.07, 0.08, 0.09, 0.1, 0.11, 
0.12, 0.13, 0.14, 0.15, 0.04, 0.04, 0.05, 0.06, 0.07, 0.07, 0.08, 
0.09, 0.1, 0.1, 0.11, 0.11, 0.12, 0.12, 0.13, 0.13, 0.13, 0.14, 
0.14, 0.14, 0.15, 0.15, 0.15, 0.15, 0.15, 0.16, 0.16, 0.16, 0.16, 
0.16, 0.16, 0.04, 0.04, 0.05, 0.06, 0.07, 0.07, 0.08, 0.09, 0.1, 
0.1, 0.11, 0.11, 0.12, 0.12, 0.13, 0.13, 0.13, 0.14, 0.04, 0.05, 
0.06, 0.07, 0.07, 0.08, 0.09, 0.1, 0.1, 0.11, 0.11, 0.12, 0.12, 
0.06, 8, 0.11, 0.16, 0.2, 0.24, 0.28, 0.32, 0.36, 0.4, 0.45, 
0.51, 0.56, 0.62, 0.68, 0.73, 0.79, 0.84, 0.9, 0.96, 1.01, 1.07, 
1.13, 1.18, 1.22, 1.27, 1.33, 1.38, 1.42, 1.47, 1.51, 0.06, 8, 
0.11, 0.16, 0.2, 0.24, 0.28, 0.32, 0.36, 0.4, 0.45, 0.51, 0.56, 
0.62, 0.68, 0.73, 0.79, 0.06, 8, 0.11, 0.16, 0.2, 0.24, 0.28, 
0.32, 0.36, 0.4, 0.45, 0.51, 0.56, 0.62), ben_electricity = c(0.37, 
0.47, 0.63, 1.03, 1.42, 1.81, 2.21, 2.6, 2.99, 3.39, 3.78, 4.18, 
4.57, 5.04, 5.6, 6.15, 6.71, 7.26, 7.8, 8.31, 8.81, 9.29, 9.72, 
10.14, 10.53, 10.93, 11.31, 11.66, 12, 12.34, 12.68, 0.37, 0.47, 
0.63, 1.03, 1.42, 1.81, 2.21, 2.6, 2.99, 3.39, 3.78, 4.18, 4.57, 
5.04, 5.6, 6.15, 6.71, 0.37, 0.47, 0.63, 1.03, 1.42, 1.81, 2.21, 
2.6, 2.99, 3.39, 3.78, 4.18, 4.57, 5.04, 0.37, 0.5, 0.9, 1.48, 
2.06, 2.64, 3.21, 3.79, 4.37, 4.95, 5.55, 6.29, 6.97, 7.59, 8.16, 
8.82, 9.34, 9.79, 10.19, 10.57, 10.93, 11.26, 11.57, 11.85, 12.11, 
12.35, 12.56, 12.78, 12.97, 13.16, 13.32, 0.37, 0.5, 0.9, 1.48, 
2.06, 2.64, 3.21, 3.79, 4.37, 4.95, 5.55, 6.29, 6.97, 7.59, 8.16, 
0.37, 0.5, 0.9, 1.48, 2.06, 2.64, 3.21, 3.79, 4.37, 4.95, 5.55, 
6.29, 6.97, 7.59, 8.16, 13.32, 0.3, 0.4, 0.49, 0.63, 0.77, 0.9, 
1.04, 1.17, 1.31, 1.45, 1.58, 1.72, 1.85, 2.06, 2.33, 2.6, 2.87, 
3.14, 3.41, 3.69, 3.96, 4.23, 4.5, 4.77, 5.04, 5.31, 5.59, 5.86, 
6.13, 6.48, 6.93, 0.3, 0.4, 0.49, 0.63, 0.77, 0.9, 1.04, 1.17, 
1.31, 1.45, 1.58, 1.72, 1.85, 2.06, 2.33, 2.6, 0.3, 0.4, 0.49, 
0.63, 0.77, 0.9, 1.04, 1.17, 1.31, 1.45, 1.58, 1.72, 1.85, 2.06, 
2.33, 0.51, 0.6, 0.7, 0.81, 0.96, 1.09, 1.22, 1.34, 1.44, 1.54, 
1.65, 1.72, 1.79, 1.86, 1.92, 1.98, 2.03, 2.08, 2.13, 2.17, 2.21, 
2.25, 2.28, 2.31, 2.34, 2.37, 2.4, 2.43, 2.45, 2.47, 2.5, 0.51, 
0.6, 0.7, 0.81, 0.96, 1.09, 1.22, 1.34, 1.44, 1.54, 1.65, 1.72, 
1.79, 1.86, 1.92, 1.98, 2.03, 2.08, 0.6, 0.7, 0.81, 0.96, 1.09, 
1.22, 1.34, 1.44, 1.54, 1.65, 1.72, 1.79, 1.86, 0.82, 1.11, 1.67, 
2.38, 3.1, 3.82, 4.54, 5.26, 5.98, 6.7, 7.56, 8.78, 10, 11.22, 
12.45, 13.67, 14.99, 16.11, 17.33, 18.55, 19.77, 21, 22.22, 23.74, 
25.34, 26.95, 28.73, 30.51, 31.85, 33.63, 34.97, 0.82, 1.11, 
1.67, 2.38, 3.1, 3.82, 4.54, 5.26, 5.98, 6.7, 7.56, 8.78, 10, 
11.22, 12.45, 13.67, 14.99, 0.82, 1.11, 1.67, 2.38, 3.1, 3.82, 
4.54, 5.26, 5.98, 6.7, 7.56, 8.78, 10, 11.22), correct_vs_convenient = structure(c(2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
1L, 1L, 1L, 1L, 1L), .Label = c("convenient", "correct"), class = "factor"), 
    ben_total = c(8.53, 10.94, 13.06, 14.22, 15.68, 16.97, 18.28, 
    19.55, 20.86, 22.15, 23.43, 24.73, 26.02, 27.43, 28.97, 30.49, 
    32.03, 33.55, 35.03, 36.45, 37.82, 39.14, 40.32, 41.48, 42.57, 
    43.67, 44.71, 45.69, 46.62, 47.56, 48.49, 8.53, 10.94, 13.06, 
    14.22, 15.68, 16.97, 18.28, 19.55, 20.86, 22.15, 23.43, 24.73, 
    26.02, 27.43, 28.97, 30.49, 32.03, 8.53, 10.94, 13.06, 14.22, 
    15.68, 16.97, 18.28, 19.55, 20.86, 22.15, 23.43, 24.73, 26.02, 
    27.43, 4.36, 5.93, 7.62, 9.32, 11.06, 12.78, 14.52, 16.24, 
    17.97, 19.7, 21.51, 23.73, 25.77, 27.62, 29.32, 31.31, 32.88, 
    34.12, 35.44, 36.57, 37.65, 38.64, 39.57, 40.41, 41.18, 41.9, 
    42.54, 43.18, 43.75, 44.32, 44.81, 4.36, 5.93, 7.62, 9.32, 
    11.06, 12.78, 14.52, 16.24, 17.97, 19.7, 21.51, 23.73, 25.77, 
    27.62, 29.32, 4.36, 5.93, 7.62, 9.32, 11.06, 12.78, 14.52, 
    16.24, 17.97, 19.7, 21.51, 23.73, 25.77, 27.62, 29.32, 31, 
    5.45, 6.97, 8.39, 9.43, 10.51, 11.51, 12.51, 13.54, 14.58, 
    15.62, 16.65, 17.69, 18.72, 19.86, 21.11, 22.35, 23.61, 24.84, 
    26.08, 27.36, 28.59, 29.84, 31.09, 32.34, 33.57, 34.83, 36.1, 
    37.32, 38.59, 39.87, 41.21, 5.45, 6.97, 8.39, 9.43, 10.51, 
    11.51, 12.51, 13.54, 14.58, 15.62, 16.65, 17.69, 18.72, 19.86, 
    21.11, 22.35, 5.45, 6.97, 8.39, 9.43, 10.51, 11.51, 12.51, 
    13.54, 14.58, 15.62, 16.65, 17.69, 18.72, 19.86, 21.11, 6.28, 
    7.46, 9.1, 9.54, 9.87, 10.2, 10.5, 10.79, 11.04, 11.28, 11.49, 
    11.68, 11.86, 12.01, 12.17, 12.31, 12.43, 12.55, 12.67, 12.76, 
    12.86, 12.96, 13.03, 13.09, 13.16, 13.24, 13.31, 13.38, 13.42, 
    13.48, 13.54, 6.28, 7.46, 9.1, 9.54, 9.87, 10.2, 10.5, 10.79, 
    11.04, 11.28, 11.49, 11.68, 11.86, 12.01, 12.17, 12.31, 12.43, 
    6.28, 7.46, 9.1, 9.54, 9.87, 10.2, 10.5, 10.79, 11.04, 11.28, 
    11.49, 11.68, 11.86, 12.01, 6.75, 17.08, 11.78, 14.48, 17.22, 
    19.94, 22.67, 25.39, 28.11, 30.84, 33.81, 37.44, 41.05, 44.69, 
    48.32, 51.94, 55.67, 59.18, 62.81, 66.45, 70.05, 73.69, 77.32, 
    81.56, 85.95, 90.36, 95.26, 100.15, 103.83, 108.73, 112.4, 
    6.75, 17.08, 11.78, 14.48, 17.22, 19.94, 22.67, 25.39, 28.11, 
    30.84, 33.81, 37.44, 41.05, 44.69, 48.32, 51.94, 55.67, 6.75, 
    17.08, 11.78, 14.48, 17.22, 19.94, 22.67, 25.39, 28.11, 30.84, 
    33.81, 37.44, 41.05, 44.69), cost_total = c(14000, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 510, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 14000, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 510, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 14000, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    510, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 14000, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 510, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 14000, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 
    22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 22.02, 510, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 24.52, 
    24.52, 24.52), netbenefit = c(-13991.47, -11.08, -8.96, -7.8, 
    -6.34, -5.05, -3.74, -2.47, -1.16, 0.13, 1.41, 2.71, 4, 5.41, 
    6.95, 8.47, 10.01, 11.53, 13.01, 14.43, 15.8, 17.12, 18.3, 
    19.46, 20.55, 21.65, 22.69, 23.67, 24.6, 25.54, 26.47, -501.47, 
    -13.58, -11.46, -10.3, -8.84, -7.55, -6.24, -4.97, -3.66, 
    -2.37, -1.09, 0.21, 1.5, 2.91, 4.45, 5.97, 7.51, -15.99, 
    -13.58, -11.46, -10.3, -8.84, -7.55, -6.24, -4.97, -3.66, 
    -2.37, -1.09, 0.21, 1.5, 2.91, -13995.64, -16.09, -14.4, 
    -12.7, -10.96, -9.24, -7.5, -5.78, -4.05, -2.32, -0.51, 1.71, 
    3.75, 5.6, 7.3, 9.29, 10.86, 12.1, 13.42, 14.55, 15.63, 16.62, 
    17.55, 18.39, 19.16, 19.88, 20.52, 21.16, 21.73, 22.3, 22.79, 
    -505.64, -18.59, -16.9, -15.2, -13.46, -11.74, -10, -8.28, 
    -6.55, -4.82, -3.01, -0.79, 1.25, 3.1, 4.8, -20.16, -18.59, 
    -16.9, -15.2, -13.46, -11.74, -10, -8.28, -6.55, -4.82, -3.01, 
    -0.79, 1.25, 3.1, 4.8, 6.48, -13994.55, -15.05, -13.63, -12.59, 
    -11.51, -10.51, -9.51, -8.48, -7.44, -6.4, -5.37, -4.33, 
    -3.3, -2.16, -0.91, 0.33, 1.59, 2.82, 4.06, 5.34, 6.57, 7.82, 
    9.07, 10.32, 11.55, 12.81, 14.08, 15.3, 16.57, 17.85, 19.19, 
    -504.55, -17.55, -16.13, -15.09, -14.01, -13.01, -12.01, 
    -10.98, -9.94, -8.9, -7.87, -6.83, -5.8, -4.66, -3.41, -2.17, 
    -19.07, -17.55, -16.13, -15.09, -14.01, -13.01, -12.01, -10.98, 
    -9.94, -8.9, -7.87, -6.83, -5.8, -4.66, -3.41, -13993.72, 
    -14.56, -12.92, -12.48, -12.15, -11.82, -11.52, -11.23, -10.98, 
    -10.74, -10.53, -10.34, -10.16, -10.01, -9.85, -9.71, -9.59, 
    -9.47, -9.35, -9.26, -9.16, -9.06, -8.99, -8.93, -8.86, -8.78, 
    -8.71, -8.64, -8.6, -8.54, -8.48, -503.72, -17.06, -15.42, 
    -14.98, -14.65, -14.32, -14.02, -13.73, -13.48, -13.24, -13.03, 
    -12.84, -12.66, -12.51, -12.35, -12.21, -12.09, -18.24, -17.06, 
    -15.42, -14.98, -14.65, -14.32, -14.02, -13.73, -13.48, -13.24, 
    -13.03, -12.84, -12.66, -12.51, -13993.25, -4.94, -10.24, 
    -7.54, -4.8, -2.08, 0.65, 3.37, 6.09, 8.82, 11.79, 15.42, 
    19.03, 22.67, 26.3, 29.92, 33.65, 37.16, 40.79, 44.43, 48.03, 
    51.67, 55.3, 59.54, 63.93, 68.34, 73.24, 78.13, 81.81, 86.71, 
    90.38, -503.25, -7.44, -12.74, -10.04, -7.3, -4.58, -1.85, 
    0.87, 3.59, 6.32, 9.29, 12.92, 16.53, 20.17, 23.8, 27.42, 
    31.15, -17.77, -7.44, -12.74, -10.04, -7.3, -4.58, -1.85, 
    0.87, 3.59, 6.32, 9.29, 12.92, 16.53, 20.17)), 
class = "data.frame", row.names = c(NA, -310L))
```

<style type="text/css"> .sidebar { overflow: auto; } </style>

Introduction {data-orientation=columns}
=========================================
 
Column {.sidebar data-width=300}
-----------------------------------------------------------------------
 
 
### Cost Benefit Analysis of developing Urban Forest in Phoenix, AZ. 

**Location**: Phoenix, AZ -- State Capital of Arizoan and Fifth most populous ciy in the United States.    
**Objectives**: Increase the Urban forest to offset the Carbon-Di-Oxide (CO2) generated by air travel by providing Cost-Beneefit analysis of five most comman urban tree species in the area.    
**Data Used**: Cost and Benefit of each of those species for a span 30 years.    
**Process**: Investigate the number of trees needed to offest the CO2 generated by a flight. Then navigate through details of cost and benefit provided by these trees while presenting the user with Net Present Value of the tree investement. 


Column 
----------------------------------


### Phoenix 

```{r}
fillRow( 
        
leaflet() %>%
  addTiles(options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
  addMarkers(lng=-112.0740, lat=33.4484, popup="City Center Phoenix, AZ")

)
```

Analysis {data-orientation=columns}
=========================================

Column {.sidebar data-width=600}
-----------------------------------------------------------------------

### Carbon generated by flights and Trees needed to offset that carbon

**Six hours flight** (cross country flight) generates approximately **3700 lbs of carbon** in a round trip.     
**Three hours flight** (Same sector flight) generates approximately **1270 lbs of carbon** in a round trip.      
**Two hour flight** (same sector shorter flight) generates approximately **950 lbs of carbon** in a round trip.    
**One hour flight** generates approximately **380 lbs of carbon** in a round trip.    
The carbon is calculated for a **single passenger in economy class**.   

```{r}

selectInput("lbs_carbon", label = "Carbon generated by a round trip airtravel:",
            choices = c(3700, 1270, 950,380), selected = 3700)

selectInput("species_trees", label = "Type of the tree to be planted:",
            choices = c("mesquite", "blue palo verde", "aleppo pine", "palo brea", "chinese elm"), selected = "mesquite")
```

Column 
----------------------------------

### Number of Trees
```{r}
#colnames(dat)

# use the user input of trees to filter data
# cant get input$species_trees to work. trying codes with mesquite
input.dat <- dat  %>% 
  filter (species %in% "mesquite")

# filter type convenient 
convenient.dat <-input.dat %>% 
  filter (correct_vs_convenient == "convenient") 
# calculate the carbon reduced by one tree by convenient installation 
carbon_convenient <- sum(convenient.dat$co2reduction_lb)

# number of trees needed to offset carbon 
# can't get input$lbs_carbon to work 
#n_tree_convenient <- round ( input$lbs_carbon/carbon_convenient)


# filter type correct 
correct.dat <- input.dat %>% 
  filter (correct_vs_convenient == "correct") 
# calculate the carbon reduced by one tree by convenient installation 
carbon_correct <- sum(correct.dat$co2reduction_lb)

# can't get input$lbs_carbon to work 
#n_tree_correct <- round ( input$lbs_carbon/carbon_correct)


```


*** 
Analysis {.storyboard}
=========================================


### Details of cost and benefit of Properly installing a tree

```{r}

```

*** 

### Details of cost and benefit of conveniently installing a tree

```{r}

```

***

### Net present Value of Cost Benefit analysis 

```{r}

```
