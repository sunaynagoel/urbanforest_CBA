table.benefit.convenient <- c(StormWater_Runoff, PropertyValue, Electricity, AirQuality, NaturalGas, CarbonReduction)
bp.convenient <- barplot(table.benefit.convenient,
main = "Benefits from planting tree conveniently",
xlab = "Types of Benefits ",
ylab = "Amount ($)",
ylim = c(0,600),
names.arg = c("StormWater_Runoff", "PropertyValue", "Electricity", "AirQuality", "NaturalGas", "CarbonReduction"),
col = "steelblue") %>%
text(bp.convenient, 100, round(table.benefit.convenient, 1),cex=1,pos=3)
})
# NPV from the tree installtion and explaination in case of correct and convenient installtion
#NPV(cf0,cf,times,i,plot=FALSE)
renderTable({
input.dat <- dat %>%
filter (species %in% input$species_trees)
# filter type correct
correct.dat <-input.dat %>%
filter (correct_vs_convenient == "correct")
cost.correct.y0 <-  correct.dat %>%
filter (year == 0) %>%
select (cost_total)
cashflow.correct.yearly <- correct.dat %>%
filter (year == 1 |  year == 2 | year == 3 | year == 4 | year == 5 | year == 6 |year == 7 | year == 8 | year == 9 |
year == 10 | year == 11| year == 12| year == 13 | year == 14 | year == 15 | year == 16 | year == 17 | year == 18 |
year == 19| year == 20| year == 21| year == 22| year == 23 | year == 24 | year == 25 | year == 26 | year == 27 |
year == 28 | year == 29 | year == 30 ) %>%
select(ben_total)
cashflow.correct.yearly <- as.numeric(unlist(cashflow.correct.yearly[[1]]))
times.correct <- as.numeric(1:30)
interest.npv <- as.numeric(.03)
npv.correct <- NPV (as.numeric(cost.correct.y0), cashflow.correct.yearly, times.correct, interest.npv, plot=FALSE )
npv.table.correct <- data.frame ( "Details" = c("Net Present Value of benefits over 30 years period from Planting tree CORRECTLY"),
"Value" = npv.correct)
npv.table.correct
# filter type convenient
convenient.dat <-input.dat %>%
filter (correct_vs_convenient == "convenient")
cost.convenient.y0 <-  convenient.dat %>%
filter (year == 0) %>%
select (cost_total)
cashflow.convenient.yearly <- convenient.dat %>%
filter (year == 1 |  year == 2 | year == 3 | year == 4 | year == 5 | year == 6 |year == 7 | year == 8 | year == 9 |
year == 10 | year == 11| year == 12| year == 13 | year == 14 | year == 15 | year == 16 | year == 17 | year == 18 |
year == 19| year == 20| year == 21| year == 22| year == 23 | year == 24 | year == 25 | year == 26 | year == 27 |
year == 28 | year == 29 | year == 30 ) %>%
select(ben_total)
cashflow.convenient.yearly <- as.numeric(unlist(cashflow.convenient.yearly[[1]]))
times.convenient <- as.numeric(1:30)
interest.npv <- as.numeric(.03)
npv.convenient <- NPV (as.numeric(cost.convenient.y0), cashflow.convenient.yearly, times.convenient, interest.npv, plot=FALSE )
npv.table.convenient <- data.frame ( "Details" = c("Net Present Value of benefits over 30 years period from Planting tree           CONVENIENTLY"),
"Value" = npv.convenient)
#kable (npv.table.convenient) %>%
#  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F, position = "left")
npv.table.output <- matrix(c(npv.convenient, npv.correct ), ncol=1,byrow=TRUE)
colnames(npv.table.output) <- c("NPV of benefits for 30 years period")
rownames(npv.table.output) <- c("Convenient Planting","Correct Planting")
npv.table.output <- data.frame(npv.table.output)
npv.table.output
}, striped = TRUE, hover = TRUE, bordered = TRUE,
width = "auto",
rownames = TRUE, colnames = TRUE
)
selectInput("lbs_carbon", label = "Carbon generated by a round trip airtravel:",
choices = c(3700, 1270, 950,380), selected = 3700)
#message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# install packages and library
# install.packages("leaflet")
#install.packages("flexdashboard")
#install.packages("shiny")
#install.packages("here")
#install.packages("dplyr")
#install.packages ("kableExtra")
#install.packages ("FinancialMath")
library(shiny)
library(flexdashboard)
library(leaflet)
library(here)
library(dplyr)
library(kableExtra)
library(FinancialMath)
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
dat <- read.csv(here("data/trees-cost-benefit.csv"))
dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
fillRow(
leaflet() %>%
addTiles(options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addMarkers(lng=-112.0740, lat=33.4484, popup="City Center Phoenix, AZ")
)
selectInput("lbs_carbon", label = "Carbon generated by a round trip airtravel:",
choices = c(3700, 1270, 950,380), selected = 3700)
sliderInput("nim_trips", label = "Number of round Trips:",
min = 1, max = 100, value = 1, step = 5, round = TRUE )
selectInput("species_trees", label = "select type of tree to be planted:",
choices = c("mesquite", "blue palo verde", "aleppo pine", "palo brea", "chinese elm"), selected = "mesquite")
install.pacakges ("gtable")
library(gtable)
#message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# install packages and library
# install.packages("leaflet")
#install.packages("flexdashboard")
#install.packages("shiny")
#install.packages("here")
#install.packages("dplyr")
#install.packages ("kableExtra")
#install.packages ("FinancialMath")
#install.pacakges ("gtable")
library(shiny)
library(flexdashboard)
library(leaflet)
library(here)
library(dplyr)
library(kableExtra)
library(FinancialMath)
library(gtable)
install.pacakges ("gtable")
install.packages ("gtable")
install.packages("gtable")
library(gtable)
#message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# install packages and library
# install.packages("leaflet")
#install.packages("flexdashboard")
#install.packages("shiny")
#install.packages("here")
#install.packages("dplyr")
#install.packages ("kableExtra")
#install.packages ("FinancialMath")
#install.packages ("gtable")
library(shiny)
library(flexdashboard)
library(leaflet)
library(here)
library(dplyr)
library(kableExtra)
library(FinancialMath)
library(gtable)
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
dat <- read.csv(here("data/trees-cost-benefit.csv"))
dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
fillRow(
leaflet() %>%
addTiles(options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addMarkers(lng=-112.0740, lat=33.4484, popup="City Center Phoenix, AZ")
)
selectInput("lbs_carbon", label = "Carbon generated by a round trip airtravel:",
choices = c(3700, 1270, 950,380), selected = 3700)
sliderInput("num_trips", label = "Number of round Trips:",
min = 1, max = 100, value = 1, step = 2, round = TRUE )
selectInput("species_trees", label = "select type of tree to be planted:",
choices = c("mesquite", "blue palo verde", "aleppo pine", "palo brea", "chinese elm"), selected = "mesquite")
#colnames(dat)
# use the user input of trees to filter data
renderTable ({
input.dat <- dat %>%
filter (species %in% input$species_trees)
# filter type convenient
convenient.dat <-input.dat %>%
filter (correct_vs_convenient == "convenient")
# calculate the carbon reduced by one tree by convenient installation
carbon_convenient <- sum(convenient.dat$co2reduction_lb)
#carbon_convenient
# number of trees needed to offset carbon
n_tree_convenient <- round (( as.numeric(input$lbs_carbon)/carbon_convenient) * input$ num_trips)
if (n_tree_convenient <= 0)
{
n_tree_convenient <- 1
}
tree_convenient_cost <- round(as.numeric (n_tree_convenient*510))
#n_tree_convenient
# filter type correct
correct.dat <- input.dat %>%
filter (correct_vs_convenient == "correct")
# calculate the carbon reduced by one tree by convenient installation
carbon_correct <- sum(correct.dat$co2reduction_lb)
#carbon_correct
# can't get input$lbs_carbon to work
n_tree_correct <- round ((as.numeric(input$lbs_carbon)/carbon_correct) * input$ num_trips)
if (n_tree_correct <= 0)
{
n_tree_correct <- 1
}
tree_correct_cost <- round (as.numeric(n_tree_correct*14000))
#n_tree_correct
table.output <- matrix(c(carbon_convenient, n_tree_convenient, tree_convenient_cost, carbon_correct, n_tree_correct,   tree_correct_cost ), ncol=3, byrow=TRUE)
colnames(table.output) <- c("Carbon_reduced_lbs","Number_of_trees_needed", "Total_offset_cost")
rownames(table.output) <- c("Convenient Planting","Correct Planting")
table.output <- data.frame(table.output)
table.output
}, striped = TRUE, hover = TRUE, bordered = TRUE,
width = "auto",
rownames = TRUE, colnames = TRUE
)
# give some details about the tree or link to a webpage connecting to that tree details
# Correct Installtion
# make a table showing cost in half of story board
kable(dat.cost.correct) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F, position = "left")
# convenient Installtion
# make a table SHowing cost in half of story board
kable(dat.cost.convenient) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F, position = "left")
# make a graph showing benefit of correct planting the chosen tree /year for 30 years (1 tree)
renderPlot ({
input.dat <- dat %>%
filter (species %in% input$species_trees)
# filter type correct
correct.dat <-input.dat %>%
filter (correct_vs_convenient == "correct")
StormWater_Runoff <-  round(sum (correct.dat$ben_storm_water))
PropertyValue <-  round(sum(correct.dat$ben_property_value))
Electricity <- round(sum(correct.dat$ben_electricity))
AirQuality <- round(sum(correct.dat$ben_air_quality))
NaturalGas <- round(sum(correct.dat$ben_naturalgas))
CarbonReduction <- round(sum(correct.dat$ben_co2_reduction))
table.benefit.correct <- c(StormWater_Runoff, PropertyValue, Electricity, AirQuality, NaturalGas, CarbonReduction)
bp.correct <- barplot(table.benefit.correct,
main = "Benefits from planting tree correctly",
xlab = "Types of Benefits",
ylab = "Amount ($)",
ylim = c(0,600),
names.arg = c("StormWater_Runoff", "PropertyValue", "Electricity", "AirQuality", "NaturalGas", "CarbonReduction"),
col = "steelblue")
bp1 <- text(bp.correct, 100, round(table.benefit.correct, 1),cex=1,pos=3)
convenient.dat <- input.dat %>%
filter (correct_vs_convenient == "convenient")
StormWater_Runoff <-  round(sum (convenient.dat$ben_storm_water))
PropertyValue <-  round(sum(convenient.dat$ben_property_value))
Electricity <- round(sum(convenient.dat$ben_electricity))
AirQuality <- round(sum(convenient.dat$ben_air_quality))
NaturalGas <- round(sum(convenient.dat$ben_naturalgas))
CarbonReduction <- round(sum(convenient.dat$ben_co2_reduction))
table.benefit.convenient <- c(StormWater_Runoff, PropertyValue, Electricity, AirQuality, NaturalGas, CarbonReduction)
bp.convenient <- barplot(table.benefit.convenient,
main = "Benefits from planting tree conveniently",
xlab = "Types of Benefits ",
ylab = "Amount ($)",
ylim = c(0,600),
names.arg = c("StormWater_Runoff", "PropertyValue", "Electricity", "AirQuality", "NaturalGas", "CarbonReduction"),
col = "steelblue")
bp2 <-  text(bp.convenient, 100, round(table.benefit.convenient, 1),cex=1,pos=3)
bp1 <- ggplotGrob(bp1)
bp2 <- ggplotGrob(bp2)
g <- rbind(bp1, bp2, size = "first")
g$widths <- unit.pmax(g2$widths, g3$widths)
grid.newpage()
grid.draw(g)
})
install.packages ("ggplot2")
#message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# install packages and library
# install.packages("leaflet")
#install.packages("flexdashboard")
#install.packages("shiny")
#install.packages("here")
#install.packages("dplyr")
#install.packages ("kableExtra")
#install.packages ("FinancialMath")
#install.packages ("gtable")
#install.packages ("ggplot2")
library(shiny)
library(flexdashboard)
library(leaflet)
library(here)
library(dplyr)
library(kableExtra)
library(FinancialMath)
library(gtable)
library(ggplot2)
install.packages("gridextra")
install.packages("gridExtra")
#message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# install packages and library
# install.packages("leaflet")
#install.packages("flexdashboard")
#install.packages("shiny")
#install.packages("here")
#install.packages("dplyr")
#install.packages ("kableExtra")
#install.packages ("FinancialMath")
#install.packages("gridExtra")
library(shiny)
library(flexdashboard)
library(leaflet)
library(here)
library(dplyr)
library(kableExtra)
library(FinancialMath)
library(gridExtra)
selectInput("npv_rate", label = "Discount rate for NPV (%):",
choices = c(2,3, 4, 5,6), selected = 3)
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv?raw=1"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv?dl=0"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv?row=1"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv?raw=1"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv"), row.names=NULL)
dat.cost.correct <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv?raw=1"))
dat
fillRow(
leaflet() %>%
addTiles(options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addMarkers(lng=-112.0740, lat=33.4484, popup="City Center Phoenix, AZ")
)
#message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# install packages and library
# install.packages("leaflet")
#install.packages("flexdashboard")
#install.packages("shiny")
#install.packages("here")
#install.packages("dplyr")
#install.packages ("kableExtra")
#install.packages ("FinancialMath")
#install.packages("gridExtra")
library(shiny)
library(flexdashboard)
library(leaflet)
library(here)
library(dplyr)
library(kableExtra)
library(FinancialMath)
library(gridExtra)
fillRow(
leaflet() %>%
addTiles(options = providerTileOptions(minZoom = 8, maxZoom = 10)) %>%
addMarkers(lng=-112.0740, lat=33.4484, popup="City Center Phoenix, AZ")
)
sliderInput("num_trips", label = "Number of round trips (yearly):",
min = 1, max = 1000, value = 1, step = 2, round = TRUE )
selectInput("lbs_carbon", label = "Carbon generated by per round trip (lbs):",
choices = c(3700, 1270, 950,380), selected = 3700)
selectInput("species_trees", label = "Select the type of tree to be planted:",
choices = c("Mesquite", "Blue Palo Verde", "Aleppo Pine", "Palo Brea", "Chinese Elm"), selected = "Mesquite")
# use the user input of trees to filter data
renderTable ({
input.dat <- dat %>%
filter (species %in% tolower(input$species_trees))
# filter type convenient
convenient.dat <-input.dat %>%
filter (correct_vs_convenient == "convenient")
# calculate the carbon reduced by the tree by convenient installation
carbon_convenient <- round((sum(convenient.dat$co2reduction_lb) * input$num_trips))
#carbon_convenient
# number of trees needed to offset carbon
n_tree_convenient <- round ((as.numeric(input$lbs_carbon)/sum(convenient.dat$co2reduction_lb)) * input$num_trips)
if (n_tree_convenient <= 0)
{
n_tree_convenient <- 1
}
tree_convenient_cost <- round (as.numeric (n_tree_convenient*510))
#n_tree_convenient
# filter type correct
correct.dat <- input.dat %>%
filter (correct_vs_convenient == "correct")
# calculate the carbon reduced by one tree by convenient installation
carbon_correct <- (sum(correct.dat$co2reduction_lb) * input$num_trips)
#Number of trees
n_tree_correct <- round ((as.numeric(input$lbs_carbon)/sum(correct.dat$co2reduction_lb)) * input$num_trips)
if (n_tree_correct <= 0)
{
n_tree_correct <- 1
}
tree_correct_cost <- round (as.numeric(n_tree_correct*14000))
#n_tree_correct
table.output <- matrix(c(carbon_convenient, n_tree_convenient, tree_convenient_cost, carbon_correct, n_tree_correct,   tree_correct_cost ), ncol=3, byrow=TRUE)
colnames(table.output) <- c("Carbon_reduced_lbs","Number_of_trees_needed", "Total_cost")
rownames(table.output) <- c("Convenient Planting","Correct Planting")
table.output <- data.frame(table.output)
table.output
}, striped = TRUE, hover = TRUE, bordered = TRUE,
width = "auto",
rownames = TRUE, colnames = TRUE
)
renderText({
paste("You have selected number of yearly round tirps as ", input$num_trips, "and", input$lbs_carbon, "lbs as average carbon generated per round trip. You have chosen to offset this carbon with" , input$species_trees, "trees.")
})
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv"))
dat.cost.correct <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_correct.csv"))
dat.cost.convenient <- read.csv(url("https://www.dropbox.com/sh/3d8vcpfhh50v5if/AAAgftn5E0gttbC2HqhssnrNa?dl=0/costdetails_convenient.csv"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
dat <- read.csv(here("data/trees-cost-benefit.csv"))
dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
#dat <- read.csv(url("https://www.dropbox.com/s/975ozilxf9gbuw0/trees-cost-benefit.csv?dl=0"))
#dat.cost.correct <- read.csv(url("https://www.dropbox.com/s/hwx7ped1wfaonsc/costdetails_correct.csv?dl=0"))
#dat.cost.convenient <- read.csv(url("https://www.dropbox.com/s/wt9re71h7whbk8o/costdetails_convenient.csv?dl=0"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/s/975ozilxf9gbuw0/trees-cost-benefit.csv?dl=0"))
dat.cost.correct <- read.csv(url("https://www.dropbox.com/s/hwx7ped1wfaonsc/costdetails_correct.csv?dl=0"))
dat.cost.convenient <- read.csv(url("https://www.dropbox.com/s/wt9re71h7whbk8o/costdetails_convenient.csv?dl=0"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/s/975ozilxf9gbuw0/trees-cost-benefit.csv?raw=1"))
dat.cost.correct <- read.csv(url("https://www.dropbox.com/s/hwx7ped1wfaonsc/costdetails_correct.csv?dl=0"))
dat.cost.convenient <- read.csv(url("https://www.dropbox.com/s/wt9re71h7whbk8o/costdetails_convenient.csv?dl=0"))
# message=FALSE, warning=FALSE, include=FALSE, echo=FALSE
# load data
#dat <- read.csv(here("data/trees-cost-benefit.csv"))
#dat.cost.correct <- read.csv(here("data/costdetails_correct.csv"))
#dat.cost.convenient <- read.csv(here("data/costdetails_convenient.csv"))
dat <- read.csv(url("https://www.dropbox.com/s/975ozilxf9gbuw0/trees-cost-benefit.csv?raw=1"))
dat.cost.correct <- read.csv(url("https://www.dropbox.com/s/hwx7ped1wfaonsc/costdetails_correct.csv?raw=1"))
dat.cost.convenient <- read.csv(url("https://www.dropbox.com/s/wt9re71h7whbk8o/costdetails_convenient.csv?raw=1"))
correct.dat
dat
dat.cost.correct
# use the user input of trees to filter data
renderTable ({
input.dat <- dat %>%
filter (species %in% tolower(input$species_trees))
# filter type convenient
convenient.dat <-input.dat %>%
filter (correct_vs_convenient == "convenient")
# calculate the carbon reduced by the tree by convenient installation
carbon_convenient <- round((as.numeric(input$lbs_carbon) * input$num_trips))
# number of trees needed to offset carbon
n_tree_convenient <- round ((as.numeric(input$lbs_carbon)/sum(convenient.dat$co2reduction_lb)) * input$num_trips)
if (n_tree_convenient <= 0)
{
n_tree_convenient <- 1
}
convenient.cost <- round (510 + (sum(dat.cost.convenient$Cost_Yearly)*30))
tree_convenient_cost <- round (as.numeric (n_tree_convenient*convenient.cost))
#tree_convenient_cost <- round (as.numeric (n_tree_convenient*510))
# filter type correct
correct.dat <- input.dat %>%
filter (correct_vs_convenient == "correct")
# calculate the carbon reduced by one tree by convenient installation
carbon_correct <- round((as.numeric(input$lbs_carbon) * input$num_trips))
#Number of trees
n_tree_correct <- round ((as.numeric(input$lbs_carbon)/sum(correct.dat$co2reduction_lb)) * input$num_trips)
if (n_tree_correct <= 0)
{
n_tree_correct <- 1
}
tree_correct_cost <- round (as.numeric(n_tree_correct*14000))
table.output <- matrix(c(carbon_convenient, n_tree_convenient, tree_convenient_cost, carbon_correct, n_tree_correct,   tree_correct_cost ), ncol=3, byrow=TRUE)
colnames(table.output) <- c("Carbon_generated","Number_of_trees_needed", "Total_cost")
rownames(table.output) <- c("Convenient Planting","Correct Planting")
table.output <- data.frame(table.output)
table.output
}, striped = TRUE, hover = TRUE, bordered = TRUE,
width = "auto",
rownames = TRUE, colnames = TRUE
)
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='sunayna',
token='46CAE423E91D0146D731576BE38B1878',
secret='VeFQ2gtTsU8hvYfG4wUuqebIB21li/VI9f8Swa0Q')
library(rsconnect)
rsconnect::deployApp('')
wd()
setwd()
library(rsconnect)
rsconnect::deployApp('')
here
here()
library(here)
library(rsconnect)
rsconnect::deployApp('/Users/sunaynaagarwal/Documents/GitHub/capstone project/urbanforest_CBA/story board/storyboard_goel.rmd')
library(rsconnect)
rsconnect::deployApp('/Users/sunaynaagarwal/Documents/GitHub/capstone project/urbanforest_CBA/story board/storyboard_goel.rmd')
library(rsconnect)
rsconnect::deployApp('/Users/sunaynaagarwal/Documents/GitHub/capstone project/urbanforest_CBA/story board/storyboard_goel.rmd')
install.packages("rsconnect")
rsconnect::deployApp('/Users/sunaynaagarwal/Documents/GitHub/capstone project/urbanforest_CBA/story board/storyboard_goel.rmd')
rsconnect::setAccountInfo(name='sunayna',
token='46CAE423E91D0146D731576BE38B1878',
secret='VeFQ2gtTsU8hvYfG4wUuqebIB21li/VI9f8Swa0Q')
rsconnect::deployApp('/Users/sunaynaagarwal/Documents/GitHub/capstone project/urbanforest_CBA/story board/storyboard_goel.rmd')
